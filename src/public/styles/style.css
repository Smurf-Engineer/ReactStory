*,
*::before,
*::after {
  box-sizing: inherit;
}

/* * {
  overflow: hidden;
  overflow-y: hidden;
  -ms-overflow-style: none;
  scrollbar-width: none;
} */

html {
  box-sizing: border-box;
  /* overflow: hidden; */
}

body {
  margin: 0;
  padding: 0;
  font-family: 'Open sans', sans-serif;
  font-weight: 400;
  overflow: hidden;
}

/*
/////////////////////////////////////////// 
Remove focus styling
/////////////////////////////////////////////
*/

:focus {
  outline: 0;
}

:disabled {
  cursor: not-allowed;
}

header {
  display: none;
}

.app-container {
  display: flex;
  width: 100%;
  height: 100vh;
}

.progress-bar {
  flex-grow: 1;
}

.column {
  width: 25%;
  background-color: #252526;
}

/* .column-right-export-btn {
  transition: display 400ms ease-in-out 300ms;
} */

/*
/////////////////////////////////////////// 
BUTTONS
/////////////////////////////////////////////
*/

.btn {
  font-size: 16px;
}

/*
/////////////////////////////////////////// 
LEFT COLUMN
/////////////////////////////////////////////
*/

.left {
  padding: 20px;
  width: 20%;
  min-width: 350px;
  display: flex;
  flex-direction: column;
  position: relative;
}

.htmlPanel {
  /* position: absolute;
  bottom: 0;
  margin-right: 50px;
  margin-left: 50px;
  margin-bottom: 50px;
  left: 0px;
  right: 0px;
  width: 100%;
  padding: 1%; */
}

.component-input {
  bottom: 2.8%;
}

.expansionPanel {
  flex-direction: column;
  display: flex;
  /* max-height: 80%; */
  height: 60%;
  overflow-y: scroll;
  padding: 1%;
}

.clear-workspace {
  top: 96%;
  position: sticky !important;
  z-index: 1;
}

/*
/////////////////////////////////////////// 
MAIN COLUMN
/////////////////////////////////////////////
*/

h1 {
  color: #ccc;
}

.main-container {
  display: flex;
  flex-direction: column;
  flex: 1;
  /* overflow-x: auto;
  overflow-y: auto; */
}

.main-header {
  /* display: flex; */
  /* border-left: 1px solid grey;
  border-right: 1px solid grey;
  border-bottom: 1px solid grey; */
  background-color: #212121;
  box-shadow: 0 5px 7px -2px rgba(0, 0, 0, 0.4);
  z-index: 10;
}

.main-header-buttons {
  display: flex;
  font-size: 12px;
}

.main {
  /* border-left: 1px solid grey; */
  /* border-right: 1px solid grey; */
  background: #fff;
  flex: 1;
  width: 100%;
  overflow: scroll;
  display: flex;
  background-color: #1e1e1e;
  /* justify-content: center;
  align-items: center; */
}

.draggable {
  position: relative;
}

.image {
  top: 0;
  left: 0;
  width: 100%;
  position: relative;
}

.image-container {
  position: relative;
  display: flex;
  top: 0;
  left: 0;
}

.export-preference div span {
  transition: color 1s, background-color 1.5s, transform 2s;
}

.export-preference div:hover {
  background-color: #303f9f;
}

.export-preference div:hover span {
  color: white;
}

.info {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

/*
/////////////////////////////////////////// 
RIGHT COLUMN
/////////////////////////////////////////////
*/

.export {
  border-top: 1px solid #ccc;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: row;
}

.bottom-panel {
  transition: width 250ms ease-in-out;
  width: 100%;
  height: 33%;
  /* display: flex;
  flex-direction: row; */
  background-color: #fcfcfc;
  box-shadow: 0 -5px 7px 2px rgba(0, 0, 0, 0.1);
}

.htmlattr {
  /* background-size: auto; */
  height: 80%;
  overflow-y: hidden;
  margin-left: 50px;
}

.props-container {
  margin-left: 10px;
  height: 33%;
  width: 100%;
}

.props-input {
  margin-bottom: 15px;
}

.chips {
  height: 55%;
  overflow: auto;
}

/* Sortable tree sorting */
.sortable-tree {
  height: 100%;
  background-color: rgb(37, 37, 38);
}

div.rst__rowContents {
  width: 45px;
  border: none;
  color: #eee;
  background-color: #333333;
}

.rst__rowContentsDragDisabled {
  background-color: #333333;
  background-color: rgba(37, 37, 38, 0.4);
}

.rst__moveHandle,
.rst__loadingHandle {
  width: 40px;
}

.rst_tree {
  overflow: auto;
}

.rst__rowLabel {
  padding-right: 5px;
}

.closeIcon:hover {
  cursor: pointer;
}
